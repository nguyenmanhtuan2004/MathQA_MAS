[
  {
    "question": "What is the difference between 2019 average rate of inflation and 2019 average rate of increase in salaries?",
    "program": "def solver():\n    # Assign the 2019 average rate of inflation\n    rate_of_inflation_2019 = 2.9\n    # Assign the 2019 average rate of increase in salaries\n    rate_of_increase_in_salaries_2019 = 2.7\n    \n    # Calculate the difference\n    difference = rate_of_inflation_2019 - rate_of_increase_in_salaries_2019\n    \n    # Double-check assignments\n    assert rate_of_inflation_2019 == 2.9, \"Incorrect rate of inflation for 2019\"\n    assert rate_of_increase_in_salaries_2019 == 2.7, \"Incorrect rate of increase in salaries for 2019\"\n    \n    # Double-check calculation\n    assert difference == 0.2, \"Incorrect difference calculation\"\n    \n    return difference\n\nresult = solver()",
    "true_answer": "0.2",
    "predicted_answer": "9999",
    "context": "|  | 2019 % | 2018 % | 2017 % |\n| --- | --- | --- | --- |\n| Weighted average actuarial assumptions used at 31 March1: |  |  |  |\n| Rate of inflation2 | 2.9 | 2.9 | 3.0 |\n| Rate of increase in salaries | 2.7 | 2.7 | 2.6 |\n| Discount rate | 2.3 | 2.5 | 2.6 |\n",
    "correct": false
  },
  {
    "question": "Which year have greater total accumulated amortisation? ",
    "program": "def solver():\n    # Accumulated amortisation at 30 June 2019\n    accumulated_amortisation_2019 = 5580\n    # Accumulated amortisation at 30 June 2018\n    accumulated_amortisation_2018 = 3261\n    \n    # Double check variables\n    assert accumulated_amortisation_2019 == 5580, \"Check 2019 accumulated amortisation\"\n    assert accumulated_amortisation_2018 == 3261, \"Check 2018 accumulated amortisation\"\n    \n    # Determine which year has greater accumulated amortisation\n    if accumulated_amortisation_2019 > accumulated_amortisation_2018:\n        answer = accumulated_amortisation_2019\n    else:\n        answer = accumulated_amortisation_2018\n    \n    return answer\n\nresult = solver()",
    "true_answer": "2019",
    "predicted_answer": "5580",
    "context": "|  | Rights and licenses | Internally generated software | Software under development | Total |\n| --- | --- | --- | --- | --- |\n| Movements | $'000 | $'000 | $'000 | $'000 |\n| At 30 June 2019 |  |  |  |  |\n| Cost | 13 | 12,961 | 16,284 | 29,259 |\n| Accumulated amortisation | - | (5,580) | - | (5,580) |\n| Netbook amount | 13 | 7,381 | 16,284 | 23,678 |\n| 30 June 2018 |  |  |  |  |\n| Opening net book amount at 1 July 2017 | 43 | 442 | 8,053 | 8,538 |\n| Additions – externally acquired | 13 | - | 5,253 | 5,266 |\n| Additions – internally developed | - | - | 1,256 | 1,256 |\n| Amortisation | (43) | (1,746) | - | (1,789) |\n| Transfers | - | 7,563 | (7,563) | - |\n| Transfer between classes | - | 744 | - | 744 |\n| Disposals | - | (618) | (490) | (1,108) |\n| Closing net book amount | 13 | 6,385 | 6,509 | 12,907 |\n| At 30 June 2018 |  |  |  |  |\n| Cost | 104 | 9,555 | 6,509 | 16,168 |\n| Accumulated amortisation | (91) | (3,170) | - | (3,261) |\n| Net book amount | 13 | 6,385 | 6,509 | 12,907 |\n",
    "correct": false
  },
  {
    "question": "What is the percentage change in the pension discount rate for actuarial benefit obligations between 2018 and 2019?",
    "program": "def solver():\n    # Discount rate for pension actuarial benefit obligation in 2019\n    discount_rate_2019 = 3.20\n    # Discount rate for pension actuarial benefit obligation in 2018\n    discount_rate_2018 = 3.80\n    \n    # Calculate percentage change\n    percentage_change = ((discount_rate_2019 - discount_rate_2018) / discount_rate_2018) * 100\n    \n    # Double check variables\n    assert discount_rate_2019 == 3.20\n    assert discount_rate_2018 == 3.80\n    \n    return percentage_change\n\nresult = solver()",
    "true_answer": "-0.6",
    "predicted_answer": "-15.789473684210517",
    "context": "The following are the significant assumptions adopted in measuring the Company’s pension and other benefit obligations:\n\n| As at December 31, | Pension 2019 | Other 2019 | Pension 2018 | Other 2018 |\n| --- | --- | --- | --- | --- |\n| Actuarial benefit obligation |  |  |  |  |\n| Discount rate | 3.20% | 2.95% to 3.20% | 3.80% | 3.80% to 4.00% |\n| Benefit costs for the year ended |  |  |  |  |\n| Discount rate | 3.90% | 3.90% to 4.00% | 3.60% | 3.25% to 3.60% |\n| Future salary growth | 2.50% | N/A | 2.50% | N/A |\n| Health care cost trend rate | N/A | 3.49% to 5.49% | N/A | 4.50% |\n| Other medical trend rates | N/A | 4.00% to 4.56% | N/A | 4.50% |\n",
    "correct": false
  },
  {
    "question": "What is the average Operating expenses?",
    "program": "def solver():\n    # Extract operating expenses percentages for years 2017, 2018, and 2019\n    sales_and_marketing_2017 = -2.8\n    general_and_administrative_2017 = -2.8\n    research_and_development_2017 = -9.2\n    expected_credit_losses_2017 = 0.0  # No value given for 2017, assume 0\n    subtotal_2017 = sales_and_marketing_2017 + general_and_administrative_2017 + research_and_development_2017 + expected_credit_losses_2017\n\n    sales_and_marketing_2018 = -2.6\n    general_and_administrative_2018 = -3.2\n    research_and_development_2018 = -8.6\n    expected_credit_losses_2018 = -0.3\n    subtotal_2018 = sales_and_marketing_2018 + general_and_administrative_2018 + research_and_development_2018 + expected_credit_losses_2018\n\n    sales_and_marketing_2019 = -2.6\n    general_and_administrative_2019 = -3.6\n    research_and_development_2019 = -8.0\n    expected_credit_losses_2019 = -0.4\n    subtotal_2019 = sales_and_marketing_2019 + general_and_administrative_2019 + research_and_development_2019 + expected_credit_losses_2019\n\n    # Calculate average operating expenses over the three years\n    average_operating_expenses = (subtotal_2017 + subtotal_2018 + subtotal_2019) / 3\n\n    # Double-check calculations\n    # 2017 subtotal: -2.8 -2.8 -9.2 + 0 = -14.8\n    # 2018 subtotal: -2.6 -3.2 -8.6 -0.3 = -14.7\n    # 2019 subtotal: -2.6 -3.6 -8.0 -0.4 = -14.6\n    # Average: (-14.8 -14.7 -14.6)/3 = -14.7\n\n    return round(average_operating_expenses, 1)\n\nresult = solver()",
    "true_answer": "14.7",
    "predicted_answer": "-14.7",
    "context": "|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2017 | 2018 | 2019 |\n|  | % | % | % |\n| Operating revenues | 100.0 | 100.0 | 100.0 |\n| Operating costs | (81.9) | (84.9) | (85.6) |\n| Gross profit | 18.1 | 15.1 | 14.4 |\n| Operating expenses |  |  |  |\n| Sales and marketing | (2.8) | (2.6) | (2.6) |\n| General and administrative | (2.8) | (3.2) | (3.6) |\n| Research and development | (9.2) | (8.6) | (8.0) |\n| Expected credit losses | — | (0.3) | (0.4) |\n| Subtotal | (14.8) | (14.7) | (14.6) |\n| Net other operating income and expenses | 1.1 | 3.4 | 3.5 |\n| Operating income | 4.4 | 3.8 | 3.3 |\n| Non-operating income and expenses | 0.7 | (2.4) | (0.1) |\n| Income from continuing operations before income tax | 5.1 | 1.4 | 3.2 |\n| Income tax benefit (expense) | (0.6) | 0.7 | (0.1) |\n| Net income | 4.5 | 2.1 | 3.1 |\n| Total other comprehensive income (loss), net of tax | (3.2) | 0.6 | 1.9 |\n| Total comprehensive income | 1.3 | 2.7 | 5.0 |\n| Net income attributable to: |  |  |  |\n| Stockholders of the parent | 6.5 | 5.1 | 5.5 |\n| Non-controlling interests | (2.0) | (3.0) | (2.4) |\n| Total comprehensive income attributable to: |  |  |  |\n| Stockholders of the parent | 3.3 | 5.7 | 7.4 |\n| Non-controlling interests | (2.0) | (3.0) | (2.4) |\n",
    "correct": false
  },
  {
    "question": "What is the percentage change in the total number of shares in 2019?",
    "program": "def solver():\n    shares_start_2019 = 898200415\n    shares_end_2019 = 903908182\n    # Calculate the percentage change in the total number of shares in 2019\n    percentage_change = ((shares_end_2019 - shares_start_2019) / shares_start_2019) * 100\n    return percentage_change\n\nresult = solver()",
    "true_answer": "-0.31",
    "predicted_answer": "0.6354669742609727",
    "context": "|  |  | 2019 |  | 2018 |  |\n| --- | --- | --- | --- | --- | --- |\n|  | NOTE | NUMBER OF SHARES | STATED CAPITAL | NUMBER OF SHARES | STATED CAPITAL |\n| Outstanding, January 1 |  | 898,200,415 | 20,036 | 900,996,640 | 20,091 |\n| Shares issued for the acquisition of AlarmForce | 34 | – | – | 22,531 | 1 |\n| Shares issued under employee stock option plan | 28 | 4,459,559 | 251 | 266,941 | 13 |\n| Repurchase of common shares |  | – | – | (3,085,697) | (69) |\n| Shares issued under ESP |  | 1,231,479 | 75 | – | – |\n| Shares issued under DSP |  | 16,729 | 1 | – | – |\n| Outstanding, December 31 |  | 903,908,182 | 20,363 | 898,200,415 | 20,036 |\n",
    "correct": false
  },
  {
    "question": "What is the 2017 deferred tax on overseas earnings, excluding the 95€m charge relating to the combination of Vodafone India with Idea Cellular?",
    "program": "def solver():\n    # Deferred tax on overseas earnings in 2017\n    deferred_tax_2017 = 26\n    # The €95 million charge relating to the combination of Vodafone India with Idea Cellular is not part of deferred tax on overseas earnings\n    # So we just return the deferred tax on overseas earnings as is\n    result = deferred_tax_2017\n    return result\n\nresult = solver()",
    "true_answer": "-69",
    "predicted_answer": "26",
    "context": "3 Includes a €42 million credit (2018: €15 million charge, 2017 €95 million charge) relating to the combination of Vodafone India with Idea Cellular\n\n|  | 2019 €m | 2018 €m | 2017 €m |\n| --- | --- | --- | --- |\n| Continuing (loss)/profit before tax as shown in the consolidated income statement | (2,613) | 3,878 | 2,792 |\n| Aggregated expected income tax (credit)/expense | (457) | 985 | 795 |\n| Impairment losses with no tax effect | 807 | – | – |\n| Disposal of Group investments | – | 55 | (271) |\n| Effect of taxation of associates and joint ventures, reported within profit before tax | 262 | 90 | 23 |\n| (Recognition)/derecognition of deferred tax assets for losses in Luxembourg and Spain1 | 1,186 | (1,583) | 1,603 |\n| Deferred tax following revaluation of investments in Luxembourg1 | (488) | (330) | (329) |\n| Previously unrecognised temporary differences we expect to use in the future | – | – | (15) |\n| Previously unrecognised temporary differences utilised in the year | – | (29) | (11) |\n| Current year temporary differences (including losses) that we currently do not expect to use | 78 | 20 | 139 |\n| Adjustments in respect of prior year tax liabilities2 | (94) | (244) | (107) |\n| Revaluation of assets for tax purposes | – | – | (39) |\n| Impact of tax credits and irrecoverable taxes | 79 | 93 | 98 |\n| Deferred tax on overseas earnings3 | (39) | 24 | 26 |\n| Effect of current year changes in statutory tax rates on deferred tax balances | (2) | (44) | 2,755 |\n| Financing costs not deductible for tax purposes | 67 | 23 | 25 |\n| Expenses not deductible (income not taxable) for tax purposes | 97 | 61 | 72 |\n| Income tax expense/(credit) | 1,496 | (879) | 4,764 |\n",
    "correct": false
  },
  {
    "question": "What is the 2018 deferred tax on overseas earnings, excluding the 15€m charge relating to the combination of Vodafone India with Idea Cellular?",
    "program": "def solver():\n    # The deferred tax on overseas earnings for 2018 is given as 24 million euros\n    deferred_tax_2018 = 24\n    # The 15 million euro charge relating to the combination of Vodafone India with Idea Cellular is a separate item and should be excluded\n    # Since the question asks for deferred tax on overseas earnings excluding the 15 million charge, and the 15 million charge is not part of deferred tax on overseas earnings,\n    # we do not subtract it from the deferred tax on overseas earnings.\n    answer = deferred_tax_2018\n    return answer\n\nresult = solver()",
    "true_answer": "9",
    "predicted_answer": "24",
    "context": "3 Includes a €42 million credit (2018: €15 million charge, 2017 €95 million charge) relating to the combination of Vodafone India with Idea Cellular\n\n|  | 2019 €m | 2018 €m | 2017 €m |\n| --- | --- | --- | --- |\n| Continuing (loss)/profit before tax as shown in the consolidated income statement | (2,613) | 3,878 | 2,792 |\n| Aggregated expected income tax (credit)/expense | (457) | 985 | 795 |\n| Impairment losses with no tax effect | 807 | – | – |\n| Disposal of Group investments | – | 55 | (271) |\n| Effect of taxation of associates and joint ventures, reported within profit before tax | 262 | 90 | 23 |\n| (Recognition)/derecognition of deferred tax assets for losses in Luxembourg and Spain1 | 1,186 | (1,583) | 1,603 |\n| Deferred tax following revaluation of investments in Luxembourg1 | (488) | (330) | (329) |\n| Previously unrecognised temporary differences we expect to use in the future | – | – | (15) |\n| Previously unrecognised temporary differences utilised in the year | – | (29) | (11) |\n| Current year temporary differences (including losses) that we currently do not expect to use | 78 | 20 | 139 |\n| Adjustments in respect of prior year tax liabilities2 | (94) | (244) | (107) |\n| Revaluation of assets for tax purposes | – | – | (39) |\n| Impact of tax credits and irrecoverable taxes | 79 | 93 | 98 |\n| Deferred tax on overseas earnings3 | (39) | 24 | 26 |\n| Effect of current year changes in statutory tax rates on deferred tax balances | (2) | (44) | 2,755 |\n| Financing costs not deductible for tax purposes | 67 | 23 | 25 |\n| Expenses not deductible (income not taxable) for tax purposes | 97 | 61 | 72 |\n| Income tax expense/(credit) | 1,496 | (879) | 4,764 |\n",
    "correct": false
  },
  {
    "question": "How much money has not been committed as of December 31, 2019 for total available lines of credit?",
    "program": "def solver():\n    total_available_2019 = 1344.1\n    committed_2019 = 1137.4\n    # Calculate the amount not committed\n    not_committed = total_available_2019 - committed_2019\n    # Double-check values\n    assert total_available_2019 == 1344.1\n    assert committed_2019 == 1137.4\n    assert not_committed == 206.7\n    return not_committed\n\nresult = solver()",
    "true_answer": "206.7",
    "predicted_answer": "9999",
    "context": "(2) Of the total available lines of credit, $1,137.4 million were committed as of December 31, 2019.\n\n|  | December 31, |  |\n| --- | --- | --- |\n| (In millions) | 2019 | 2018 |\n| Used lines of credit (1) | $ 98.9 | $ 232.8 |\n| Unused lines of credit | 1,245.2 | 1,135.3 |\n| Total available lines of credit(2) | $ 1,344.1 | $ 1,368.1 |\n",
    "correct": false
  },
  {
    "question": "In which year was Current earnings from discontinued operations after taxes larger?",
    "program": "def solver():\n    earnings_2017_2018 = 88\n    earnings_2018_2019 = 122\n    # Double-check values\n    assert earnings_2017_2018 == 88\n    assert earnings_2018_2019 == 122\n    # Determine which year had larger earnings\n    if earnings_2017_2018 > earnings_2018_2019:\n        answer = 2017\n    else:\n        answer = 2018\n    return answer\n\nresult = solver()",
    "true_answer": "2019",
    "predicted_answer": "2018",
    "context": "| € million | 2017/2018 | 2018/2019 |\n| --- | --- | --- |\n| Sales | 2,680 | 2,901 |\n| Expenses | −2,563 | −2,736 |\n| Current earnings from discontinued operations before taxes | 117 | 165 |\n| Income taxes on gains/losses on the current result | −29 | −43 |\n| Current earnings from discontinued operations after taxes | 88 | 122 |\n| Gains/losses from the remeasurement or disposal of discontinued operations before taxes | 0 | 0 |\n| Gains/losses from the remeasurement or disposal of discontinued operations after taxes | 0 | 0 |\n| Profit or loss for the period from discontinued operations after taxes | 88 | 122 |\n",
    "correct": false
  },
  {
    "question": "What is the increase/ (decrease) in Net financing cash flows from Year Ended December 31, 2019 to December 31, 2018?",
    "program": "def solver():\n    net_financing_2019 = -382229\n    net_financing_2018 = 434786\n    # Calculate the change from 2019 to 2018\n    change = net_financing_2019 - net_financing_2018\n    return change\n\nresult = solver()",
    "true_answer": "-52557",
    "predicted_answer": "-817015",
    "context": "| (in thousands of U.S. Dollars) | Year Ended December 31, |  |\n| --- | --- | --- |\n|  | 2019 | 2018 |\n| Net operating cash flows | 383,306 | 182,135 |\n| Net financing cash flows | (382,229) | 434,786 |\n| Net investing cash flows | (50,391) | (663,456) |\n",
    "correct": false
  },
  {
    "question": "What is the increase/ (decrease) in Net investing cash flows from Year Ended December 31, 2019 to December 31, 2018?",
    "program": "def solver():\n    net_investing_2019 = -50391\n    net_investing_2018 = -663456\n    # Calculate the change from 2019 to 2018\n    change = net_investing_2019 - net_investing_2018\n    return change\n\nresult = solver()",
    "true_answer": "-613065",
    "predicted_answer": "613065",
    "context": "| (in thousands of U.S. Dollars) | Year Ended December 31, |  |\n| --- | --- | --- |\n|  | 2019 | 2018 |\n| Net operating cash flows | 383,306 | 182,135 |\n| Net financing cash flows | (382,229) | 434,786 |\n| Net investing cash flows | (50,391) | (663,456) |\n",
    "correct": false
  },
  {
    "question": "What is the total Foreign exchange forward contracts sold for March 29, 2019 and March 30, 2018?",
    "program": "def solver():\n    # Foreign exchange forward contracts sold for March 29, 2019\n    sold_2019_hedges = 116\n    sold_2019_balance_sheet = 122\n    total_sold_2019 = sold_2019_hedges + sold_2019_balance_sheet\n\n    # Foreign exchange forward contracts sold for March 30, 2018\n    sold_2018_hedges = 0  # No value given, so assumed 0\n    sold_2018_balance_sheet = 151\n    total_sold_2018 = sold_2018_hedges + sold_2018_balance_sheet\n\n    # Total sold for both years\n    total_sold = total_sold_2019 + total_sold_2018\n\n    return total_sold\n\nresult = solver()",
    "true_answer": "273",
    "predicted_answer": "389",
    "context": "| (In millions) | March 29, 2019 | March 30, 2018 |\n| --- | --- | --- |\n| Net investment hedges |  |  |\n| Foreign exchange forward contracts sold | $116 | $— |\n| Balance sheet contracts |  |  |\n| Foreign exchange forward contracts purchased | $963 | $697 |\n| Foreign exchange forward contracts sold | $122 | $151 |\n",
    "correct": false
  },
  {
    "question": "What is the average Unamortized debt discount for 2018 and 2019?",
    "program": "def solver():\n    unamortized_discount_2019 = 1328\n    unamortized_discount_2018 = 1630\n    average_discount = (unamortized_discount_2019 + unamortized_discount_2018) / 2\n    return average_discount\n\nresult = solver()",
    "true_answer": "-1479",
    "predicted_answer": "1479.0",
    "context": "|  | December 31, 2019 | December 31, 2018 |\n| --- | --- | --- |\n|  | (in thousands) |  |\n| Principal | $212,000 | $262,000 |\n| Less: |  |  |\n| Unamortized debt discount | (1,328) | (1,630) |\n| Unamortized debt issuance costs | (3,763) | (4,613) |\n| Net carrying amount of long-term debt | 206,909 | 255,757 |\n| Less: current portion of long-term debt | — | — |\n| Long-term debt, non-current portion | $206,909 | 255,757 |\n",
    "correct": false
  },
  {
    "question": "What is the average federal income tax expense at statutory rates in 2017 and 2018?",
    "program": "def solver():\n    tax_2017 = -10892\n    tax_2018 = -8690\n    # Calculate the average\n    average_tax = (tax_2017 + tax_2018) / 2\n    return average_tax\n\nresult = solver()",
    "true_answer": "9791",
    "predicted_answer": "-9791.0",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "What is the average federal income tax expense at statutory rates in 2018 and 2019?",
    "program": "def solver():\n    # Federal income tax expense at statutory rates for 2019 and 2018\n    tax_2019 = -11061\n    tax_2018 = -8690\n    \n    # Calculate the average\n    average_tax = (tax_2019 + tax_2018) / 2\n    \n    # Double-check values\n    assert tax_2019 == -11061\n    assert tax_2018 == -8690\n    \n    return average_tax\n\nresult = solver()",
    "true_answer": "9875.5",
    "predicted_answer": "-9875.5",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "What is the average state income taxes, net of federal benefit in 2017 and 2018?",
    "program": "def solver():\n    state_income_taxes_2017 = -2244\n    state_income_taxes_2018 = -2665\n    # Calculate average\n    average = (state_income_taxes_2017 + state_income_taxes_2018) / 2\n    return average\n\nresult = solver()",
    "true_answer": "2454.5",
    "predicted_answer": "-2454.5",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "In which year is the actual income tax expense the highest?",
    "program": "def solver():\n    # Income tax expenses for each year in thousands\n    tax_2019 = 255141\n    tax_2018 = 771108\n    tax_2017 = 113910\n    \n    # Determine the highest income tax expense\n    highest_tax = max(tax_2019, tax_2018, tax_2017)\n    \n    # Return the highest value\n    return highest_tax\n\nresult = solver()",
    "true_answer": "2018",
    "predicted_answer": "771108",
    "context": "A reconciliation of income tax expense provided at the federal statutory rate (21% in fiscal year 2019, 28.27% in fiscal year 2018, and 35% in fiscal year 2017) to actual income tax expense is as follows:\n\n|  |  | Year Ended |  |\n| --- | --- | --- | --- |\n|  | June 30, 2019 | June 24, 2018 | June 25, 2017 |\n|  |  | (in thousands) |  |\n| Income tax expense computed at federal statutory rate | $513,780 | $891,011 | $634,086 |\n| State income taxes, net of federal tax benefit | (17,565) | (50,585) | (11,973) |\n| Foreign income taxed at different rates | (260,344) | (939,808) | (352,860) |\n| Settlements and reductions in uncertain tax positions | (31,291) | (33,367) | (144,519) |\n| Tax credits | (71,779) | (69,301) | (37,713) |\n| State valuation allowance, net of federal tax benefit | 26,742 | 57,302 | 12,070 |\n| Equity-based compensation | (7,566) | (35,875) | 13,187 |\n| Other permanent differences and miscellaneous items | 39,251 | 43,214 | 1,632 |\n| U.S. tax reform impacts | 63,913 | 908,517 | — |\n|  | $255,141 | $771,108 | $113,910 |\n",
    "correct": false
  },
  {
    "question": "How much would diluted EPS be for second quarter ended of fiscal year 2019 without the net charge related to the enactment of the TCJA and the net income tax benefit related to the intangible property transfers?",
    "program": "def solver():\n    # Given diluted EPS for second quarter ended December 31, 2019\n    diluted_eps_reported = 1.08\n    # The net charge related to the enactment of the TCJA and net income tax benefit related to intangible property transfers decreased (increased) diluted EPS by $(0.34) for the fourth quarter,\n    # and $(0.02) for the second quarter. The problem states it decreased (increased) diluted EPS $0.02 for the second quarter.\n    # Since it decreased EPS by $0.02, to find EPS without the net charge, we add back 0.02\n    adjustment = 0.02\n    diluted_eps_without_net_charge = diluted_eps_reported + adjustment\n    # Double-check variables\n    assert isinstance(diluted_eps_reported, float) or isinstance(diluted_eps_reported, int)\n    assert isinstance(adjustment, float) or isinstance(adjustment, int)\n    assert abs(diluted_eps_without_net_charge - (diluted_eps_reported + adjustment)) < 1e-6\n    return round(diluted_eps_without_net_charge, 2)\n\nresult = solver()",
    "true_answer": "1.73",
    "predicted_answer": "1.1",
    "context": "(b) Reflects the net charge related to the enactment of the TCJA and the net income tax benefit related to the intangible property transfers, which decreased (increased) diluted EPS $0.02 for the second quarter, $(0.34) for the fourth quarter, and $(0.31) for fiscal year 2019.\n\n| (In millions, except per share amounts) |  |  |  |  |  |\n| --- | --- | --- | --- | --- | --- |\n| Quarter Ended | September 30 | December 31 | March 31 | June 30 | Total |\n| Fiscal Year 2019 |  |  |  |  |  |\n| Revenue | $  29,084 | $  32,471 | $  30,571 | $  33,717 | $  125,843 |\n| Gross margin | 19,179 | 20,048 | 20,401 | 23,305 | 82,933 |\n| Operating income | 9,955 | 10,258 | 10,341 | 12,405 | 42,959 |\n| Net income (a) | 8,824 | 8,420 | 8,809 | 13,187 | 39,240 |\n| Basic earnings per share | 1.15 | 1.09 | 1.15 | 1.72 | 5.11 |\n| Diluted earnings per share (b) | 1.14 | 1.08 | 1.14 | 1.71 | 5.06 |\n| Fiscal Year 2018 |  |  |  |  |  |\n| Revenue | $  24,538 | $ 28,918 | $ 26,819 | $ 30,085 | $ 110,360 |\n| Gross margin | 16,260 | 17,854 | 17,550 | 20,343 | 72,007 |\n| Operating income | 7,708 | 8,679 | 8,292 | 10,379 | 35,058 |\n| Net income (loss) (c) | 6,576 | (6,302) | 7,424 | 8,873 | 16,571 |\n| Basic earnings (loss) per share | 0.85 | (0.82) | 0.96 | 1.15 | 2.15 |\n| Diluted earnings (loss) per share (d) | 0.84 | (0.82) | 0.95 | 1.14 | 2.13 |\n",
    "correct": false
  },
  {
    "question": "What was the percentage change in unfunded obligations between 2018 and 2019?",
    "program": "def solver():\n    unfunded_2019 = -30\n    unfunded_2018 = -28\n    # Calculate the change in unfunded obligations\n    change = unfunded_2019 - unfunded_2018\n    # Calculate the percentage change relative to 2018 value\n    percentage_change = (change / abs(unfunded_2018)) * 100\n    return percentage_change\n\nresult = solver()",
    "true_answer": "7.14",
    "predicted_answer": "-7.142857142857142",
    "context": "The funded status of our postretirement health care and other defined benefit plans, which is recognized in other long-term liabilities in our consolidated balance sheets, was as follows (in millions):\n\n|  | April 26, 2019 | April 27, 2018 |\n| --- | --- | --- |\n| Fair value of plan assets | $ 31 | $ 25 |\n| Benefit obligations | (61) | (53) |\n| Unfunded obligations | $(30) | $(28) |\n",
    "correct": false
  },
  {
    "question": "In which year were the pension expenses larger?",
    "program": "def solver():\n    pension_expenses_2017_2018 = 36\n    pension_expenses_2018_2019 = 31\n    # Check which year had larger pension expenses\n    if pension_expenses_2017_2018 > pension_expenses_2018_2019:\n        answer = 2017\n    else:\n        answer = 2018\n    return answer\n\nresult = solver()",
    "true_answer": "2018",
    "predicted_answer": "2017",
    "context": "| € million | 2017/2018 | 2018/2019 |\n| --- | --- | --- |\n| Current service cost1 | 24 | 21 |\n| Net interest expenses2 | 11 | 9 |\n| Past service cost (incl. curtailments and changes) | 0 | 0 |\n| Settlements | 0 | 0 |\n| Other pension expenses | 1 | 1 |\n| Pension expenses | 36 | 31 |\n",
    "correct": false
  },
  {
    "question": "What percentage of total cost does Egg products form a part of in 2019?",
    "program": "def solver():\n    egg_products_cost_2019 = 29020  # Egg products cost for fiscal year ended June 1, 2019\n    total_cost_2019 = 1138329  # Total cost for fiscal year ended June 1, 2019\n    \n    # Calculate the percentage of total cost that egg products form\n    percentage = (egg_products_cost_2019 / total_cost_2019) * 100\n    \n    # Double-check the values\n    assert egg_products_cost_2019 == 29020\n    assert total_cost_2019 == 1138329\n    \n    return round(percentage, 1)\n\nresult = solver()",
    "true_answer": "2.55",
    "predicted_answer": "2.5",
    "context": "|  | Fiscal Year Ended |  |  | Quarter Ended |  |  |\n| --- | --- | --- | --- | --- | --- | --- |\n| (Amounts in thousands) | June 1, 2019 | June 2, 2018 | Percent Change | June 1, 2019 | June 2, 2018 | Percent Change |\n| Cost of sales: |  |  |  |  |  |  |\n| Farm production | $ 635,797 | $ 603,887 | 5.3 % | $ 162,142 | $ 155,471 | 4.3% |\n| Processing and packaging | 222,765 | 214,078 | 4.1% | 55,584 | 53,734 | 3.4% |\n| Outside egg purchases and other | 249,605 | 287,472 | (13.2)% | 44,509 | 81,623 | (45.5)% |\n| Total shell eggs | 1,108,167 | 1,105,437 | 0.2 % | 262,235 | 290,828 | (9.8)% |\n| Egg products | 29,020 | 35,551 | (18.4)% | 5,139 | 10,743 | (52.2)% |\n| Other | 1,142 | 898 | 27.2% | 444 | 308 | 44.2% |\n| Total | $1,138,329 | $1,141,886 | (0.3)% | $267,818 | $301,879 | (11.3)% |\n| Farm production cost (per dozen produced) |  |  |  |  |  |  |\n| Feed | $0.415 | $0.394 | 5.3% | $0.411 | $0.416 | (1.2)% |\n| Other | 0.319 | 0.303 | 5.3% | 0.328 | 0.311 | 5.5% |\n| Total | $0.734 | $0.697 | 5.3% | $0.739 | $0.727 | 1.7% |\n| Outside egg purchases (average cost per dozen) | $1.26 | $1.45 | (13.1)% | $1.05 | $1.82 | (42.3)% |\n| Dozen produced | 876,705 | 873,307 | 0.4% | 222,625 | 215,729 | 3.2% |\n| Dozen sold | 1,038,900 | 1,037,713 | 0.1% | 254,772 | 251,955 | 1.1% |\n",
    "correct": false
  },
  {
    "question": "Which year had a larger difference in the balance between the start and the end of the year?",
    "program": "def solver():\n    # Calculate the difference in balance for 2018\n    start_2018 = 6562\n    end_2018 = 7955\n    diff_2018 = abs(end_2018 - start_2018)\n\n    # Calculate the difference in balance for 2019\n    start_2019 = 7955\n    end_2019 = 16424\n    diff_2019 = abs(end_2019 - start_2019)\n\n    # Determine which year had the larger difference\n    if diff_2018 > diff_2019:\n        return diff_2018\n    else:\n        return diff_2019\n\nresult = solver()",
    "true_answer": "2019",
    "predicted_answer": "8469",
    "context": "|  | December 31, |  |\n| --- | --- | --- |\n|  | 2018 | 2019 |\n| Balance January 1 | 6,562 | 7,955 |\n| Charged to cost of sales | 18,408 | 26,301 |\n| Deductions | (8,985) | (12,232) |\n| Releases of expired warranty | (8,214) | (5,684) |\n| Foreign currency translation effect | 184 | 84 |\n| Balance December 31 | 7,955 | 16,424 |\n",
    "correct": false
  },
  {
    "question": "What is the difference in the weighted-average grant date fair value between granted and vested RSUs?",
    "program": "def solver():\n    granted_fair_value = 45.55\n    vested_fair_value = 47.86\n    difference = granted_fair_value - vested_fair_value\n    return difference\n\nresult = solver()",
    "true_answer": "2.31",
    "predicted_answer": "-2.3100000000000023",
    "context": "The following table summarizes our RSU activity with performance-based RSUs presented at the maximum potential shares that could be earned and issued at vesting (amounts in thousands except per share amounts):\n\n|  | Number of shares | Weighted-Average Grant Date Fair Value |\n| --- | --- | --- |\n| Unvested RSUs at December 31, 2018 | 10,623 | $40.39 |\n| Granted | 4,426 | 45.55 |\n| Vested | (2,758) | 47.86 |\n| Forfeited | (2,963) | 54.61 |\n| Unvested RSUs at December 31, 2019 | 9,328 | $32.60 |\n",
    "correct": false
  },
  {
    "question": "What is the difference in the weighted-average grant date fair value between granted and forfeited RSUs?",
    "program": "def solver():\n    granted_value = 45.55\n    forfeited_value = 54.61\n    difference = granted_value - forfeited_value\n    return difference\n\nresult = solver()",
    "true_answer": "9.06",
    "predicted_answer": "-9.060000000000002",
    "context": "The following table summarizes our RSU activity with performance-based RSUs presented at the maximum potential shares that could be earned and issued at vesting (amounts in thousands except per share amounts):\n\n|  | Number of shares | Weighted-Average Grant Date Fair Value |\n| --- | --- | --- |\n| Unvested RSUs at December 31, 2018 | 10,623 | $40.39 |\n| Granted | 4,426 | 45.55 |\n| Vested | (2,758) | 47.86 |\n| Forfeited | (2,963) | 54.61 |\n| Unvested RSUs at December 31, 2019 | 9,328 | $32.60 |\n",
    "correct": false
  },
  {
    "question": "What is the percentage increase / (decrease) in the gain on bargain purchase from 2018 to 2019?",
    "program": "def solver():\n    gain_2019 = -1.1\n    gain_2018 = -115.4\n    # Calculate the change\n    change = gain_2019 - gain_2018\n    # Calculate the percentage change relative to 2018\n    percentage_change = (change / abs(gain_2018)) * 100\n    return percentage_change\n\nresult = solver()",
    "true_answer": "-99.05",
    "predicted_answer": "99.0467937608319",
    "context": "|  |  | Year ended December 31, |  |\n| --- | --- | --- | --- |\n|  |  |  | Increase / |\n|  | 2019 | 2018 | (Decrease) |\n| Net income - Insurance segment | $59.4 | $165.2 | $(105.8) |\n| Effect of investment (gains) (1) | (1.9) | (5.6) | 3.7 |\n| Asset impairment expense | 47.3 | — | 47.3 |\n| Gain on bargain purchase | (1.1) | (115.4) | 114.3 |\n| Gain on reinsurance recaptures | — | (47.0) | 47.0 |\n| Acquisition costs | 2.1 | 2.8 | (0.7) |\n| Insurance AOI | 105.8 | — | 105.8 |\n| Income tax expense (benefit) | (20.1) | 0.6 | (20.7) |\n| Pre-tax Insurance AOI | $85.7 | $0.6 | $85.1 |\n",
    "correct": false
  },
  {
    "question": "What is the difference between the number of RSUs granted in 2019 and 2018?",
    "program": "def solver():\n    granted_2019 = 333\n    granted_2018 = 759\n    difference = granted_2019 - granted_2018\n    return difference\n\nresult = solver()",
    "true_answer": "426",
    "predicted_answer": "-426",
    "context": "A summary of the grants under the RSU Plans as of December 31, 2019 and 2018, and for the year then ended consisted of the following (in thousands):\n\n|  |  | Year Ended | December 31, |  |\n| --- | --- | --- | --- | --- |\n|  | 2019 |  | 2018 |  |\n|  | Number of | Number of | Number of | Number of |\n|  | RSUs | Vested RSUs | RSUs | Vested RSUs |\n| Outstanding, Jan. 1 | 951 | 459 | 462 | 262 |\n| Granted | 333 | - | 759 | - |\n| Distributed | (267) | (267) | (262) | (262) |\n| Vested | - | 825 | - | 459 |\n| Forfeited | - | - | (8) | - |\n| Outstanding, Dec. 31 | 1,017 | 1,017 | 951 | 459 |\n",
    "correct": false
  },
  {
    "question": "What is the increase/ (decrease) in Income tax expense from the period December 31, 2018 to 2019?",
    "program": "def solver():\n    income_tax_2019 = -62\n    income_tax_2018 = -28\n    # Calculate the change in income tax expense from 2018 to 2019\n    change = income_tax_2019 - income_tax_2018\n    return change\n\nresult = solver()",
    "true_answer": "34",
    "predicted_answer": "-34",
    "context": "|  |  | Three Months Ended |  |\n| --- | --- | --- | --- |\n|  | December 31, 2019 | September 29, 2019 | December 31, 2018 |\n|  |  | (Unaudited, in millions) |  |\n| Income tax expense | $(62) | $(28) | $(28) |\n",
    "correct": false
  },
  {
    "question": "Which years did Cash and cash equivalents and restricted cash exceed $100,000?",
    "program": "def solver():\n    cash_2019 = 78727\n    cash_2018 = 150774\n    years_exceeding_100000 = 0\n    if cash_2019 > 100000:\n        years_exceeding_100000 += 1\n    if cash_2018 > 100000:\n        years_exceeding_100000 += 1\n    return years_exceeding_100000\n\nresult = solver()",
    "true_answer": "2018",
    "predicted_answer": "1",
    "context": "NAVIOS MARITIME HOLDINGS INC. NOTES TO THE CONSOLIDATED FINANCIAL STATEMENTS (Expressed in thousands of U.S. dollars — except share data)\n\n|  | December 31, 2019 | December 31,2018 |\n| --- | --- | --- |\n| Cash on hand and at banks | $77,041 | $131,432 |\n| Short-term deposits and highly liquid funds | 950 | 6,450 |\n| Restricted cash | 736 | 12,892 |\n| Cash and cash equivalents and restricted cash | $78,727 | $150,774 |\n",
    "correct": false
  }
]