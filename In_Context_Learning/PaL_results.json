[
  {
    "question": "How much was the closing net book amount for software under development in 2019?",
    "program": "def solver():\n    \"\"\"How much was the closing net book amount for software under development in 2019?\"\"\"\n    # From the table, the closing net book amount for software under development in 2019 is given as 6,509\n    closing_net_book_amount_2019 = 6509\n    return closing_net_book_amount_2019\n\nresult = solver()",
    "true_answer": "16284",
    "predicted_answer": "6509",
    "context": "|  | Rights and licenses | Internally generated software | Software under development | Total |\n| --- | --- | --- | --- | --- |\n| Movements | $'000 | $'000 | $'000 | $'000 |\n| At 30 June 2019 |  |  |  |  |\n| Cost | 13 | 12,961 | 16,284 | 29,259 |\n| Accumulated amortisation | - | (5,580) | - | (5,580) |\n| Netbook amount | 13 | 7,381 | 16,284 | 23,678 |\n| 30 June 2018 |  |  |  |  |\n| Opening net book amount at 1 July 2017 | 43 | 442 | 8,053 | 8,538 |\n| Additions – externally acquired | 13 | - | 5,253 | 5,266 |\n| Additions – internally developed | - | - | 1,256 | 1,256 |\n| Amortisation | (43) | (1,746) | - | (1,789) |\n| Transfers | - | 7,563 | (7,563) | - |\n| Transfer between classes | - | 744 | - | 744 |\n| Disposals | - | (618) | (490) | (1,108) |\n| Closing net book amount | 13 | 6,385 | 6,509 | 12,907 |\n| At 30 June 2018 |  |  |  |  |\n| Cost | 104 | 9,555 | 6,509 | 16,168 |\n| Accumulated amortisation | (91) | (3,170) | - | (3,261) |\n| Net book amount | 13 | 6,385 | 6,509 | 12,907 |\n",
    "correct": false
  },
  {
    "question": "What was the total cost for 2019?",
    "program": "def solver():\n    # Given data from the table for 2019\n    cost_rights_and_licenses = 13\n    cost_internally_generated_software = 12961\n    cost_software_under_development = 16284\n    # Total cost is the sum of all cost components\n    total_cost_2019 = cost_rights_and_licenses + cost_internally_generated_software + cost_software_under_development\n    # Double check calculations\n    assert total_cost_2019 == 13 + 12961 + 16284\n    return total_cost_2019\n\nresult = solver()",
    "true_answer": "29259",
    "predicted_answer": "29258",
    "context": "|  | Rights and licenses | Internally generated software | Software under development | Total |\n| --- | --- | --- | --- | --- |\n| Movements | $'000 | $'000 | $'000 | $'000 |\n| At 30 June 2019 |  |  |  |  |\n| Cost | 13 | 12,961 | 16,284 | 29,259 |\n| Accumulated amortisation | - | (5,580) | - | (5,580) |\n| Netbook amount | 13 | 7,381 | 16,284 | 23,678 |\n| 30 June 2018 |  |  |  |  |\n| Opening net book amount at 1 July 2017 | 43 | 442 | 8,053 | 8,538 |\n| Additions – externally acquired | 13 | - | 5,253 | 5,266 |\n| Additions – internally developed | - | - | 1,256 | 1,256 |\n| Amortisation | (43) | (1,746) | - | (1,789) |\n| Transfers | - | 7,563 | (7,563) | - |\n| Transfer between classes | - | 744 | - | 744 |\n| Disposals | - | (618) | (490) | (1,108) |\n| Closing net book amount | 13 | 6,385 | 6,509 | 12,907 |\n| At 30 June 2018 |  |  |  |  |\n| Cost | 104 | 9,555 | 6,509 | 16,168 |\n| Accumulated amortisation | (91) | (3,170) | - | (3,261) |\n| Net book amount | 13 | 6,385 | 6,509 | 12,907 |\n",
    "correct": false
  },
  {
    "question": "What is the difference between 2019 average rate of inflation and 2019 average rate of increase in salaries?",
    "program": "def solver():\n    \"\"\"What is the difference between 2019 average rate of inflation and 2019 average rate of increase in salaries?\"\"\"\n    rate_inflation_2019 = 2.9\n    rate_salary_increase_2019 = 2.7\n    difference = rate_inflation_2019 - rate_salary_increase_2019\n    # Double-checking variables and calculation\n    assert rate_inflation_2019 == 2.9\n    assert rate_salary_increase_2019 == 2.7\n    assert difference == 0.2\n    return difference\n\nresult = solver()",
    "true_answer": "0.2",
    "predicted_answer": "9999",
    "context": "|  | 2019 % | 2018 % | 2017 % |\n| --- | --- | --- | --- |\n| Weighted average actuarial assumptions used at 31 March1: |  |  |  |\n| Rate of inflation2 | 2.9 | 2.9 | 3.0 |\n| Rate of increase in salaries | 2.7 | 2.7 | 2.6 |\n| Discount rate | 2.3 | 2.5 | 2.6 |\n",
    "correct": false
  },
  {
    "question": "What is the percentage change in the pension discount rate for actuarial benefit obligations between 2018 and 2019?",
    "program": "def solver():\n    \"\"\"Calculate the percentage change in the pension discount rate for actuarial benefit obligations between 2018 and 2019.\"\"\"\n    discount_rate_2018 = 3.80  # in percent\n    discount_rate_2019 = 3.20  # in percent\n    # Calculate percentage change = ((new - old) / old) * 100\n    percentage_change = ((discount_rate_2019 - discount_rate_2018) / discount_rate_2018) * 100\n    # If the result is a float with no decimal part, convert to int\n    if isinstance(percentage_change, float) and percentage_change.is_integer():\n        percentage_change = int(percentage_change)\n    return percentage_change\n\nresult = solver()",
    "true_answer": "-0.6",
    "predicted_answer": "-15.789473684210517",
    "context": "The following are the significant assumptions adopted in measuring the Company’s pension and other benefit obligations:\n\n| As at December 31, | Pension 2019 | Other 2019 | Pension 2018 | Other 2018 |\n| --- | --- | --- | --- | --- |\n| Actuarial benefit obligation |  |  |  |  |\n| Discount rate | 3.20% | 2.95% to 3.20% | 3.80% | 3.80% to 4.00% |\n| Benefit costs for the year ended |  |  |  |  |\n| Discount rate | 3.90% | 3.90% to 4.00% | 3.60% | 3.25% to 3.60% |\n| Future salary growth | 2.50% | N/A | 2.50% | N/A |\n| Health care cost trend rate | N/A | 3.49% to 5.49% | N/A | 4.50% |\n| Other medical trend rates | N/A | 4.00% to 4.56% | N/A | 4.50% |\n",
    "correct": false
  },
  {
    "question": "What is the percentage change in the total number of shares in 2019?",
    "program": "def solver():\n    \"\"\"Calculate the percentage change in the total number of shares in 2019 compared to 2018.\"\"\"\n    shares_2019 = 903908182\n    shares_2018 = 898200415\n    change = shares_2019 - shares_2018\n    percentage_change = (change / shares_2018) * 100\n    # Round to a reasonable number of decimals (e.g., 6) to avoid floating point artifacts\n    percentage_change = round(percentage_change, 6)\n    return percentage_change\n\nresult = solver()",
    "true_answer": "-0.31",
    "predicted_answer": "0.635467",
    "context": "|  |  | 2019 |  | 2018 |  |\n| --- | --- | --- | --- | --- | --- |\n|  | NOTE | NUMBER OF SHARES | STATED CAPITAL | NUMBER OF SHARES | STATED CAPITAL |\n| Outstanding, January 1 |  | 898,200,415 | 20,036 | 900,996,640 | 20,091 |\n| Shares issued for the acquisition of AlarmForce | 34 | – | – | 22,531 | 1 |\n| Shares issued under employee stock option plan | 28 | 4,459,559 | 251 | 266,941 | 13 |\n| Repurchase of common shares |  | – | – | (3,085,697) | (69) |\n| Shares issued under ESP |  | 1,231,479 | 75 | – | – |\n| Shares issued under DSP |  | 16,729 | 1 | – | – |\n| Outstanding, December 31 |  | 903,908,182 | 20,363 | 898,200,415 | 20,036 |\n",
    "correct": false
  },
  {
    "question": "What is the 2017 deferred tax on overseas earnings, excluding the 95€m charge relating to the combination of Vodafone India with Idea Cellular?",
    "program": "def solver():\n    # Given data from the table for 2017 deferred tax on overseas earnings\n    deferred_tax_overseas_2017 = 26\n    # The 2017 charge relating to the combination of Vodafone India with Idea Cellular is 95 million euros\n    vodafone_india_charge_2017 = 95\n    # The question asks for the 2017 deferred tax on overseas earnings excluding the 95 million charge\n    # Since the 95 million charge is a separate item, it should not be included in the deferred tax on overseas earnings\n    # Therefore, the answer is just the deferred tax on overseas earnings value\n    ans = deferred_tax_overseas_2017\n    return ans\n\nresult = solver()",
    "true_answer": "-69",
    "predicted_answer": "26",
    "context": "3 Includes a €42 million credit (2018: €15 million charge, 2017 €95 million charge) relating to the combination of Vodafone India with Idea Cellular\n\n|  | 2019 €m | 2018 €m | 2017 €m |\n| --- | --- | --- | --- |\n| Continuing (loss)/profit before tax as shown in the consolidated income statement | (2,613) | 3,878 | 2,792 |\n| Aggregated expected income tax (credit)/expense | (457) | 985 | 795 |\n| Impairment losses with no tax effect | 807 | – | – |\n| Disposal of Group investments | – | 55 | (271) |\n| Effect of taxation of associates and joint ventures, reported within profit before tax | 262 | 90 | 23 |\n| (Recognition)/derecognition of deferred tax assets for losses in Luxembourg and Spain1 | 1,186 | (1,583) | 1,603 |\n| Deferred tax following revaluation of investments in Luxembourg1 | (488) | (330) | (329) |\n| Previously unrecognised temporary differences we expect to use in the future | – | – | (15) |\n| Previously unrecognised temporary differences utilised in the year | – | (29) | (11) |\n| Current year temporary differences (including losses) that we currently do not expect to use | 78 | 20 | 139 |\n| Adjustments in respect of prior year tax liabilities2 | (94) | (244) | (107) |\n| Revaluation of assets for tax purposes | – | – | (39) |\n| Impact of tax credits and irrecoverable taxes | 79 | 93 | 98 |\n| Deferred tax on overseas earnings3 | (39) | 24 | 26 |\n| Effect of current year changes in statutory tax rates on deferred tax balances | (2) | (44) | 2,755 |\n| Financing costs not deductible for tax purposes | 67 | 23 | 25 |\n| Expenses not deductible (income not taxable) for tax purposes | 97 | 61 | 72 |\n| Income tax expense/(credit) | 1,496 | (879) | 4,764 |\n",
    "correct": false
  },
  {
    "question": "In which year was Current earnings from discontinued operations after taxes larger?",
    "program": "def solver():\n    \"\"\"In which year was Current earnings from discontinued operations after taxes larger?\"\"\"\n    earnings_2017_2018 = 88\n    earnings_2018_2019 = 122\n    # Compare the earnings\n    if earnings_2017_2018 > earnings_2018_2019:\n        ans = 2017\n    else:\n        ans = 2018\n    return ans\n\nresult = solver()",
    "true_answer": "2019",
    "predicted_answer": "2018",
    "context": "| € million | 2017/2018 | 2018/2019 |\n| --- | --- | --- |\n| Sales | 2,680 | 2,901 |\n| Expenses | −2,563 | −2,736 |\n| Current earnings from discontinued operations before taxes | 117 | 165 |\n| Income taxes on gains/losses on the current result | −29 | −43 |\n| Current earnings from discontinued operations after taxes | 88 | 122 |\n| Gains/losses from the remeasurement or disposal of discontinued operations before taxes | 0 | 0 |\n| Gains/losses from the remeasurement or disposal of discontinued operations after taxes | 0 | 0 |\n| Profit or loss for the period from discontinued operations after taxes | 88 | 122 |\n",
    "correct": false
  },
  {
    "question": "What is the increase/ (decrease) in Net financing cash flows from Year Ended December 31, 2019 to December 31, 2018?",
    "program": "def solver():\n    \"\"\"What is the increase/ (decrease) in Net financing cash flows from Year Ended December 31, 2019 to December 31, 2018?\"\"\"\n    net_financing_2019 = -382229\n    net_financing_2018 = 434786\n    # Calculate the change from 2018 to 2019\n    change = net_financing_2019 - net_financing_2018\n    # If the result is a float but represents an integer, convert to int\n    if isinstance(change, float) and change.is_integer():\n        change = int(change)\n    return change\n\nresult = solver()",
    "true_answer": "-52557",
    "predicted_answer": "-817015",
    "context": "| (in thousands of U.S. Dollars) | Year Ended December 31, |  |\n| --- | --- | --- |\n|  | 2019 | 2018 |\n| Net operating cash flows | 383,306 | 182,135 |\n| Net financing cash flows | (382,229) | 434,786 |\n| Net investing cash flows | (50,391) | (663,456) |\n",
    "correct": false
  },
  {
    "question": "What is the increase/ (decrease) in Net investing cash flows from Year Ended December 31, 2019 to December 31, 2018?",
    "program": "def solver():\n    \"\"\"What is the increase/ (decrease) in Net investing cash flows from Year Ended December 31, 2019 to December 31, 2018?\"\"\"\n    investing_2019 = -50391\n    investing_2018 = -663456\n    # Calculate the increase/decrease\n    change = investing_2019 - investing_2018\n    # Convert to int if it is a float with no decimal part\n    if isinstance(change, float) and change.is_integer():\n        change = int(change)\n    return change\n\nresult = solver()",
    "true_answer": "-613065",
    "predicted_answer": "613065",
    "context": "| (in thousands of U.S. Dollars) | Year Ended December 31, |  |\n| --- | --- | --- |\n|  | 2019 | 2018 |\n| Net operating cash flows | 383,306 | 182,135 |\n| Net financing cash flows | (382,229) | 434,786 |\n| Net investing cash flows | (50,391) | (663,456) |\n",
    "correct": false
  },
  {
    "question": "What is the total Foreign exchange forward contracts sold for March 29, 2019 and March 30, 2018?",
    "program": "def solver():\n    \"\"\"Calculate total Foreign exchange forward contracts sold for March 29, 2019 and March 30, 2018.\"\"\"\n    sold_2019 = 116\n    sold_2018 = 151\n    total_sold = sold_2019 + sold_2018\n    # Double-check values\n    assert sold_2019 == 116, \"Value for 2019 sold contracts does not match\"\n    assert sold_2018 == 151, \"Value for 2018 sold contracts does not match\"\n    return total_sold\n\nresult = solver()",
    "true_answer": "273",
    "predicted_answer": "267",
    "context": "| (In millions) | March 29, 2019 | March 30, 2018 |\n| --- | --- | --- |\n| Net investment hedges |  |  |\n| Foreign exchange forward contracts sold | $116 | $— |\n| Balance sheet contracts |  |  |\n| Foreign exchange forward contracts purchased | $963 | $697 |\n| Foreign exchange forward contracts sold | $122 | $151 |\n",
    "correct": false
  },
  {
    "question": "What is the average Unamortized debt discount for 2018 and 2019?",
    "program": "def solver():\n    \"\"\"Calculate the average Unamortized debt discount for 2018 and 2019.\"\"\"\n    debt_discount_2018 = 1630\n    debt_discount_2019 = 1328\n    average_discount = (debt_discount_2018 + debt_discount_2019) / 2\n    # If the result is a whole number, convert to int\n    if isinstance(average_discount, float) and average_discount.is_integer():\n        average_discount = int(average_discount)\n    return average_discount\n\nresult = solver()",
    "true_answer": "-1479",
    "predicted_answer": "1479",
    "context": "|  | December 31, 2019 | December 31, 2018 |\n| --- | --- | --- |\n|  | (in thousands) |  |\n| Principal | $212,000 | $262,000 |\n| Less: |  |  |\n| Unamortized debt discount | (1,328) | (1,630) |\n| Unamortized debt issuance costs | (3,763) | (4,613) |\n| Net carrying amount of long-term debt | 206,909 | 255,757 |\n| Less: current portion of long-term debt | — | — |\n| Long-term debt, non-current portion | $206,909 | 255,757 |\n",
    "correct": false
  },
  {
    "question": "What is the average state income taxes, net of federal benefit in 2017 and 2018?",
    "program": "def solver():\n    \"\"\"Calculate the average state income taxes, net of federal benefit in 2017 and 2018.\"\"\"\n    state_income_taxes_2017 = -2244\n    state_income_taxes_2018 = -2665\n    average = (state_income_taxes_2017 + state_income_taxes_2018) / 2\n    # Check if average is integer-like float\n    if isinstance(average, float) and average.is_integer():\n        average = int(average)\n    return average\n\nresult = solver()",
    "true_answer": "2454.5",
    "predicted_answer": "-2454.5",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "What is the average federal income tax expense at statutory rates in 2017 and 2018?",
    "program": "def solver():\n    \"\"\"Calculate the average federal income tax expense at statutory rates in 2017 and 2018.\"\"\"\n    tax_2017 = -10892\n    tax_2018 = -8690\n    average_tax = (tax_2017 + tax_2018) / 2\n    # Since the values are negative (expenses), the average will also be negative\n    # Return as integer if no decimal part\n    if isinstance(average_tax, float) and average_tax.is_integer():\n        average_tax = int(average_tax)\n    return average_tax\n\nresult = solver()",
    "true_answer": "9791",
    "predicted_answer": "-9791",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "What is the average federal income tax expense at statutory rates in 2018 and 2019?",
    "program": "def solver():\n    \"\"\"Calculate the average federal income tax expense at statutory rates in 2018 and 2019.\"\"\"\n    tax_2018 = -8690\n    tax_2019 = -11061\n    average_tax = (tax_2018 + tax_2019) / 2\n    # Since the values are negative (expenses), average will also be negative\n    # Return as integer if no decimal part\n    if isinstance(average_tax, float) and average_tax.is_integer():\n        average_tax = int(average_tax)\n    return average_tax\n\nresult = solver()",
    "true_answer": "9875.5",
    "predicted_answer": "-9875.5",
    "context": "The following is a reconciliation of the Federal statutory income taxes to the amounts reported in the financial statements (in thousands).\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Federal income tax expense at statutory rates | $(11,061) | $(8,690) | $(10,892) |\n| Effect of: |  |  |  |\n| State income taxes, net of federal benefit | (2,973) | (2,665) | (2,244) |\n| Impact of foreign operations | (11) | (146) | 74 |\n| Non-deductible expenses | (592) | (1,274) | (1,350) |\n| Federal tax rate change | — | — | (9,046) |\n| Tax effect of TCJA from foreign earnings | (28) | (130) | (2,296) |\n| Other | (581) | (645) | 239 |\n| Changes in valuation allowance | 92 | 835 | 273 |\n| Income tax expense | $(15,154) | $(12,715) | $(25,242) |\n",
    "correct": false
  },
  {
    "question": "How much would diluted EPS be for second quarter ended of fiscal year 2019 without the net charge related to the enactment of the TCJA and the net income tax benefit related to the intangible property transfers?",
    "program": "def solver():\n    \"\"\"Calculate diluted EPS for second quarter ended of fiscal year 2019 without the net charge related to the enactment of the TCJA and the net income tax benefit related to the intangible property transfers.\"\"\"\n    # Given diluted EPS for second quarter ended December 31, 2019\n    diluted_eps_reported = 1.08\n    # The net charge decreased diluted EPS by $0.02 for the second quarter\n    net_charge_effect = 0.02\n    # To find diluted EPS without the net charge, add back the effect\n    diluted_eps_without_net_charge = diluted_eps_reported + net_charge_effect\n    # Double-check calculations\n    assert abs(diluted_eps_without_net_charge - 1.10) < 1e-9, \"Calculation error\"\n    return diluted_eps_without_net_charge\n\nresult = solver()",
    "true_answer": "1.73",
    "predicted_answer": "1.1",
    "context": "(b) Reflects the net charge related to the enactment of the TCJA and the net income tax benefit related to the intangible property transfers, which decreased (increased) diluted EPS $0.02 for the second quarter, $(0.34) for the fourth quarter, and $(0.31) for fiscal year 2019.\n\n| (In millions, except per share amounts) |  |  |  |  |  |\n| --- | --- | --- | --- | --- | --- |\n| Quarter Ended | September 30 | December 31 | March 31 | June 30 | Total |\n| Fiscal Year 2019 |  |  |  |  |  |\n| Revenue | $  29,084 | $  32,471 | $  30,571 | $  33,717 | $  125,843 |\n| Gross margin | 19,179 | 20,048 | 20,401 | 23,305 | 82,933 |\n| Operating income | 9,955 | 10,258 | 10,341 | 12,405 | 42,959 |\n| Net income (a) | 8,824 | 8,420 | 8,809 | 13,187 | 39,240 |\n| Basic earnings per share | 1.15 | 1.09 | 1.15 | 1.72 | 5.11 |\n| Diluted earnings per share (b) | 1.14 | 1.08 | 1.14 | 1.71 | 5.06 |\n| Fiscal Year 2018 |  |  |  |  |  |\n| Revenue | $  24,538 | $ 28,918 | $ 26,819 | $ 30,085 | $ 110,360 |\n| Gross margin | 16,260 | 17,854 | 17,550 | 20,343 | 72,007 |\n| Operating income | 7,708 | 8,679 | 8,292 | 10,379 | 35,058 |\n| Net income (loss) (c) | 6,576 | (6,302) | 7,424 | 8,873 | 16,571 |\n| Basic earnings (loss) per share | 0.85 | (0.82) | 0.96 | 1.15 | 2.15 |\n| Diluted earnings (loss) per share (d) | 0.84 | (0.82) | 0.95 | 1.14 | 2.13 |\n",
    "correct": false
  },
  {
    "question": "What was the change in benefit obligations between 2018 and 2019?",
    "program": "def solver():\n    \"\"\"What was the change in benefit obligations between 2018 and 2019?\"\"\"\n    benefit_obligations_2019 = 61\n    benefit_obligations_2018 = 53\n    change = benefit_obligations_2019 - benefit_obligations_2018\n    # Check if change is float with .0 and convert to int\n    if isinstance(change, float) and change.is_integer():\n        change = int(change)\n    return change\n\nresult = solver()",
    "true_answer": "-8",
    "predicted_answer": "8",
    "context": "The funded status of our postretirement health care and other defined benefit plans, which is recognized in other long-term liabilities in our consolidated balance sheets, was as follows (in millions):\n\n|  | April 26, 2019 | April 27, 2018 |\n| --- | --- | --- |\n| Fair value of plan assets | $ 31 | $ 25 |\n| Benefit obligations | (61) | (53) |\n| Unfunded obligations | $(30) | $(28) |\n",
    "correct": false
  },
  {
    "question": "What is the amount of employee stock purchase rights including accelerated stock-based compensation expense at the end of 2018?",
    "program": "def solver():\n    \"\"\"What is the amount of employee stock purchase rights including accelerated stock-based compensation expense at the end of 2018?\"\"\"\n    # Given amount for employee stock purchase rights in 2018\n    esp_rights_2018 = 5240\n    # Accelerated stock-based compensation expense included in 2018\n    accelerated_expense = 4100\n    # Total amount including accelerated expense\n    total_amount = esp_rights_2018 + accelerated_expense\n    return total_amount\n\nresult = solver()",
    "true_answer": "5240",
    "predicted_answer": "9340",
    "context": "(1) Amount for the year ended December 31, 2018 includes $4.1 million of accelerated stock-based compensation expense. In March 2018, as\na result of a suspension of the 2014 Purchase Plan due to our non-timely filing status, all unrecognized stock-based compensation expense\nrelated to ESPP under the 2014 Purchase Plan was accelerated and recognized within the consolidated statement of operations.\n\n|  |  | Years Ended December 31, |  |\n| --- | --- | --- | --- |\n|  | 2019 | 2018 | 2017 |\n| Stock-based compensation by type of award: |  |  |  |\n| Stock options | $648 | $1,353 | $2,705 |\n| Stock awards | 14,882 | 10,445 | 11,421 |\n| Employee stock purchase rights(1) | 999 | 5,240 | 3,077 |\n| Total | $16,529 | $17,038 | $17,203 |\n| Stock-based compensation by category of expense: |  |  |  |\n| Cost of revenue | $1,500 | $1,602 | $1,362 |\n| Sales and marketing | 5,765 | 5,667 | 6,075 |\n| Research and development | 6,039 | 6,631 | 6,343 |\n| General and administrative | 3,225 | 3,138 | 3,423 |\n| Total | $16,529 | $17,038 | $17,203 |\n",
    "correct": false
  },
  {
    "question": "Which years did the increase resulting from Non-deductible compensation exceed 1%?",
    "program": "def solver():\n    \"\"\"Which years did the increase resulting from Non-deductible compensation exceed 1%?\"\"\"\n    # Data from the table\n    years = [2019, 2018, 2017]\n    non_deductible_compensation = [1.5, 0.2, 0.2]\n\n    # Find years where the increase exceeded 1%\n    years_exceeding = [year for year, value in zip(years, non_deductible_compensation) if value > 1]\n\n    # Count how many years\n    ans = len(years_exceeding)\n\n    # Double-check variable assignments and calculations\n    assert years == [2019, 2018, 2017], \"Years list does not match problem statement\"\n    assert non_deductible_compensation == [1.5, 0.2, 0.2], \"Values do not match problem statement\"\n    assert all(value > 1 for value in [1.5]) and all(value <= 1 for value in [0.2, 0.2]), \"Filtering logic error\"\n\n    return ans\n\nresult = solver()",
    "true_answer": "2019",
    "predicted_answer": "1",
    "context": "|  | 2019 | 2018 | 2017 |\n| --- | --- | --- | --- |\n| Federal statutory income tax rate | 21.0 % | 24.5 %  | 35.0 % |\n| Increase (decrease) resulting from:       |  |  |  |\n| Foreign tax rate differences | (21.0) | (30.2) | (39.9) |\n| Withholding tax on dividends  | (5.4) | 23.7 | — |\n| Permanent differences  | (1.3) | 0.8 | 3.0 |\n| Excess tax benefits related to share-based compensation  | (1.3) | (2.7) | (2.0) |\n| Global intangible low-taxed income (\"GILTI\")  | 11.7 | — | — |\n| Deemed repatriation tax  | 5.6 | 92.2 | — |\n| Non-deductible compensation | 1.5 | 0.2 | 0.2 |\n| Valuation allowances  | 1.5 | (30.6) | 12.2 |\n| Rate changes  | — | 9.0 | — |\n| Other, net  | 1.5 | 1.0 | (0.5) |\n| Effective income tax rate | 13.8 %  | 87.9 %  | 8.0 % |\n",
    "correct": false
  },
  {
    "question": "In which year were the pension expenses larger?",
    "program": "def solver():\n    \"\"\"In which year were the pension expenses larger?\"\"\"\n    pension_expenses_2017_2018 = 36\n    pension_expenses_2018_2019 = 31\n    if pension_expenses_2017_2018 > pension_expenses_2018_2019:\n        ans = 2017\n    else:\n        ans = 2018\n    return ans\n\nresult = solver()",
    "true_answer": "2018",
    "predicted_answer": "2017",
    "context": "| € million | 2017/2018 | 2018/2019 |\n| --- | --- | --- |\n| Current service cost1 | 24 | 21 |\n| Net interest expenses2 | 11 | 9 |\n| Past service cost (incl. curtailments and changes) | 0 | 0 |\n| Settlements | 0 | 0 |\n| Other pension expenses | 1 | 1 |\n| Pension expenses | 36 | 31 |\n",
    "correct": false
  },
  {
    "question": "What is the difference in the weighted-average grant date fair value between granted and forfeited RSUs?",
    "program": "def solver():\n    \"\"\"Calculate the difference in the weighted-average grant date fair value between granted and forfeited RSUs.\"\"\"\n    granted_value = 45.55\n    forfeited_value = 54.61\n    difference = granted_value - forfeited_value\n    # Double-checking the calculation\n    assert difference == 45.55 - 54.61\n    return difference\n\nresult = solver()",
    "true_answer": "9.06",
    "predicted_answer": "-9.060000000000002",
    "context": "The following table summarizes our RSU activity with performance-based RSUs presented at the maximum potential shares that could be earned and issued at vesting (amounts in thousands except per share amounts):\n\n|  | Number of shares | Weighted-Average Grant Date Fair Value |\n| --- | --- | --- |\n| Unvested RSUs at December 31, 2018 | 10,623 | $40.39 |\n| Granted | 4,426 | 45.55 |\n| Vested | (2,758) | 47.86 |\n| Forfeited | (2,963) | 54.61 |\n| Unvested RSUs at December 31, 2019 | 9,328 | $32.60 |\n",
    "correct": false
  },
  {
    "question": "What is the percentage increase / (decrease) in the gain on bargain purchase from 2018 to 2019?",
    "program": "def solver():\n    \"\"\"Calculate the percentage increase/decrease in the gain on bargain purchase from 2018 to 2019.\"\"\"\n    gain_2018 = -115.4\n    gain_2019 = -1.1\n    # Calculate the change\n    change = gain_2019 - gain_2018\n    # Calculate percentage change relative to 2018 value\n    # Avoid division by zero, but 2018 value is not zero here\n    percentage_change = (change / abs(gain_2018)) * 100\n    # Round to one decimal place for clarity\n    percentage_change = round(percentage_change, 1)\n    return percentage_change\n\nresult = solver()",
    "true_answer": "-99.05",
    "predicted_answer": "99.0",
    "context": "|  |  | Year ended December 31, |  |\n| --- | --- | --- | --- |\n|  |  |  | Increase / |\n|  | 2019 | 2018 | (Decrease) |\n| Net income - Insurance segment | $59.4 | $165.2 | $(105.8) |\n| Effect of investment (gains) (1) | (1.9) | (5.6) | 3.7 |\n| Asset impairment expense | 47.3 | — | 47.3 |\n| Gain on bargain purchase | (1.1) | (115.4) | 114.3 |\n| Gain on reinsurance recaptures | — | (47.0) | 47.0 |\n| Acquisition costs | 2.1 | 2.8 | (0.7) |\n| Insurance AOI | 105.8 | — | 105.8 |\n| Income tax expense (benefit) | (20.1) | 0.6 | (20.7) |\n| Pre-tax Insurance AOI | $85.7 | $0.6 | $85.1 |\n",
    "correct": false
  },
  {
    "question": "What is the difference between the number of RSUs granted in 2019 and 2018?",
    "program": "def solver():\n    \"\"\"What is the difference between the number of RSUs granted in 2019 and 2018?\"\"\"\n    granted_2019 = 333\n    granted_2018 = 759\n    difference = granted_2019 - granted_2018\n    # If the result is a float with .0, convert to int\n    if isinstance(difference, float) and difference.is_integer():\n        difference = int(difference)\n    return difference\n\nresult = solver()",
    "true_answer": "426",
    "predicted_answer": "-426",
    "context": "A summary of the grants under the RSU Plans as of December 31, 2019 and 2018, and for the year then ended consisted of the following (in thousands):\n\n|  |  | Year Ended | December 31, |  |\n| --- | --- | --- | --- | --- |\n|  | 2019 |  | 2018 |  |\n|  | Number of | Number of | Number of | Number of |\n|  | RSUs | Vested RSUs | RSUs | Vested RSUs |\n| Outstanding, Jan. 1 | 951 | 459 | 462 | 262 |\n| Granted | 333 | - | 759 | - |\n| Distributed | (267) | (267) | (262) | (262) |\n| Vested | - | 825 | - | 459 |\n| Forfeited | - | - | (8) | - |\n| Outstanding, Dec. 31 | 1,017 | 1,017 | 951 | 459 |\n",
    "correct": false
  }
]